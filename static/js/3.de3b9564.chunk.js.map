{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileDataForm.jsx","../node_modules/@ant-design/icons-svg/es/asn/CameraOutlined.js","../node_modules/@ant-design/icons/es/icons/CameraOutlined.js","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","ProfileStatusWithHooks","props","useState","editMode","setEditMode","status","setStatus","useEffect","onClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","ProfileDataFormReduxForm","reduxForm","form","handleSubmit","profile","error","onSubmit","className","style","formSummaryError","createField","Input","type","Textarea","Object","keys","contacts","map","key","s","contact","ref","AntdIcon","assign","icon","displayName","ProfileData","isOwner","goToEditMode","userInfo","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","contactTitle","contactValue","Contact","ProfileInfo","savePhoto","saveProfile","Preloader","descriptionBlock","photoBlock","photo","src","photos","large","userPhoto","mainPhoto","customFileUpload","target","files","length","initialValues","formData","then","Post","item","message","likesCount","maxLength10","maxLengthCreator","AddNewPostFormRedux","field","Field","fieldForm","name","component","placeholder","validate","required","MyPosts","React","memo","postsElements","posts","reverse","p","id","createRef","postsBlock","values","addPost","newPostText","MyPostsContainer","connect","state","profilePage","dispatch","addPostActionCreator","Profile","ProfileContainer","userId","this","match","params","authorizedUserId","history","push","getUserProfile","getStatus","refreshProfile","prevProps","prevState","snapshot","Component","compose","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/3.de3b9564.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__3cd8Y\",\"photoBlock\":\"ProfileInfo_photoBlock__3-kiv\",\"userInfo\":\"ProfileInfo_userInfo__3hlxg\",\"photo\":\"ProfileInfo_photo__3YYCg\",\"customFileUpload\":\"ProfileInfo_customFileUpload__11Y2d\",\"mainPhoto\":\"ProfileInfo_mainPhoto__1Fgjo\",\"contact\":\"ProfileInfo_contact__1N3gp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__2ifKf\",\"field\":\"MyPosts_field__1WcIv\",\"fieldForm\":\"MyPosts_fieldForm__1PpTn\",\"posts\":\"MyPosts_posts__3tZ1c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__ihtu9\"};","import React, {useState, useEffect} from 'react';\n\nconst ProfileStatusWithHooks = (props) => {\n    let [editMode, setEditMode] = useState(false);\n    let [status, setStatus] = useState(props.status);\n\n    useEffect( () => {\n        setStatus(props.status);\n    }, [props.status] );\n\n    const activateEditMode = () => {\n        setEditMode(true);\n    }\n\n    const deactivateEditMode = () => {\n        setEditMode(false);\n        props.updateStatus(status);\n    }\n\n    const onStatusChange = (e) => {\n        setStatus(e.currentTarget.value);\n    }\n\n    return (\n        <div>\n            { !editMode &&\n            <div>\n                <span onClick={ activateEditMode }>{props.status || \"change status\"}</span>\n            </div>\n            }\n            {editMode &&\n            <div>\n                <input onChange={onStatusChange} autoFocus={true} onBlur={ deactivateEditMode }\n                       value={status} />\n            </div>\n            }\n        </div>\n    )\n}\n\n\nexport default ProfileStatusWithHooks;","import React from \"react\";\nimport s from './ProfileInfo.module.css';\nimport {createField, Input, Textarea} from \"../../common/FormsControls/FormsControls\";\nimport {reduxForm} from \"redux-form\";\nimport style from \"../../common/FormsControls/FormsControls.module.css\";\n\nconst ProfileDataForm = ({handleSubmit, profile, error}) => {\n    return <form onSubmit={handleSubmit}>\n        <div><button>save</button></div>\n        {error && <div className={style.formSummaryError}>\n            {error}\n        </div>\n        }\n        <div>\n            <b>Full name</b>: {createField(\"Full name\", \"fullName\", [], Input)}\n        </div>\n        <div>\n            <b>Looking for a job</b>: { createField(\"\", \"lookingForAJob\", [], Input, {type: \"checkbox\"} )}\n        </div>\n\n        <div>\n            <b>My professional skills</b>:\n            { createField(\"My professional skills\", \"lookingForAJobDescription\", [], Textarea  )}\n        </div>\n\n        <div>\n            <b>About me</b>:\n            { createField(\"About me\", \"aboutMe\", [], Textarea  )}\n        </div>\n        <div>\n            <b>Contacts</b>: {Object.keys(profile.contacts).map(key => {\n            return <div key={key} className={s.contact}>\n            <b>{key}: {createField(key, \"contacts.\" + key, [], Input)}</b>\n            </div>\n        })}\n        </div>\n    </form>\n}\n\nconst ProfileDataFormReduxForm = reduxForm({form: 'edit-profile'})(ProfileDataForm)\n\nexport default ProfileDataFormReduxForm;","// This icon file is generated automatically.\nvar CameraOutlined = {\n  \"icon\": {\n    \"tag\": \"svg\",\n    \"attrs\": {\n      \"viewBox\": \"64 64 896 896\",\n      \"focusable\": \"false\"\n    },\n    \"children\": [{\n      \"tag\": \"path\",\n      \"attrs\": {\n        \"d\": \"M864 248H728l-32.4-90.8a32.07 32.07 0 00-30.2-21.2H358.6c-13.5 0-25.6 8.5-30.1 21.2L296 248H160c-44.2 0-80 35.8-80 80v456c0 44.2 35.8 80 80 80h704c44.2 0 80-35.8 80-80V328c0-44.2-35.8-80-80-80zm8 536c0 4.4-3.6 8-8 8H160c-4.4 0-8-3.6-8-8V328c0-4.4 3.6-8 8-8h186.7l17.1-47.8 22.9-64.2h250.5l22.9 64.2 17.1 47.8H864c4.4 0 8 3.6 8 8v456zM512 384c-88.4 0-160 71.6-160 160s71.6 160 160 160 160-71.6 160-160-71.6-160-160-160zm0 256c-53 0-96-43-96-96s43-96 96-96 96 43 96 96-43 96-96 96z\"\n      }\n    }]\n  },\n  \"name\": \"camera\",\n  \"theme\": \"outlined\"\n};\nexport default CameraOutlined;","// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport CameraOutlinedSvg from \"@ant-design/icons-svg/es/asn/CameraOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar CameraOutlined = function CameraOutlined(props, ref) {\n  return React.createElement(AntdIcon, Object.assign({}, props, {\n    ref: ref,\n    icon: CameraOutlinedSvg\n  }));\n};\n\nCameraOutlined.displayName = 'CameraOutlined';\nexport default React.forwardRef(CameraOutlined);","import React, {useState} from 'react';\nimport s from './ProfileInfo.module.css';\nimport Preloader from \"../../common/Preloader/Preloader\";\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\nimport userPhoto from \"../../../assets/images/user.png\";\nimport ProfileDataForm from \"./ProfileDataForm\";\nimport {CameraOutlined} from \"@ant-design/icons\";\n\nconst ProfileInfo = ({profile, status, updateStatus, isOwner, savePhoto, saveProfile}) => {\n\n    let [editMode, setEditMode] = useState(false);\n\n    if (!profile) {\n        return <Preloader/>\n    }\n\n    const onMainPhotoSelected = (e) => {\n        if (e.target.files.length) {\n            savePhoto(e.target.files[0]);\n        }\n    }\n\n    const onSubmit = (formData) => {\n        saveProfile(formData).then(\n            () => {\n                setEditMode(false);\n            }\n        );\n    }\n\n    return (\n        <div className={s.descriptionBlock}>\n            <div className={s.photoBlock}>\n                <div className={s.photo}>\n                    <img src={profile.photos.large || userPhoto} className={s.mainPhoto}/>\n                    {isOwner && <label className={s.customFileUpload}>\n                                    <input type={\"file\"} onChange={onMainPhotoSelected}/>\n                                    <CameraOutlined />\n                                </label>}\n                </div>\n            </div>\n            <div>\n                <span>{profile.fullName}</span>\n                <ProfileStatusWithHooks status={status} updateStatus={updateStatus}/>\n            {editMode\n                ? <ProfileDataForm initialValues={profile} profile={profile} onSubmit={onSubmit}/>\n                : <ProfileData goToEditMode={() => {\n                    setEditMode(true)\n                }} profile={profile} isOwner={isOwner}/>}\n            </div>\n        </div>\n    )\n}\n\nconst ProfileData = ({profile, isOwner, goToEditMode}) => {\n    return <div className={s.userInfo}>\n        <div>\n            <b>Full name</b>: {profile.fullName}\n        </div>\n        <div>\n            <b>Looking for a job</b>: {profile.lookingForAJob ? \"yes\" : \"no\"}\n        </div>\n        {profile.lookingForAJob &&\n        <div>\n            <b>My professional skills</b>: {profile.lookingForAJobDescription}\n        </div>\n        }\n\n        <div>\n            <b>About me</b>: {profile.aboutMe}\n        </div>\n        <div>\n            <b>Contacts</b>: {Object.keys(profile.contacts).map(key => {\n            return <Contact key={key} contactTitle={key} contactValue={profile.contacts[key]}/>\n        })}\n        </div>\n        {isOwner && <div><button onClick={goToEditMode}>Edit profile</button></div>}\n    </div>\n}\n\n\nconst Contact = ({contactTitle, contactValue}) => {\n    return <div className={s.contact}><b>{contactTitle}</b>: {contactValue}</div>\n}\n\nexport default ProfileInfo;","import React from 'react';\nimport s from './Post.module.css';\n\nconst Post = (props) => {\n  return (\n    <div className={s.item}>\n      <img src='https://movies4maniacs.liberty.me/wp-content/uploads/sites/1218/2015/09/avatarsucks.jpg' />\n        { props.message }\n          <div>\n        <span>like</span> { props.likesCount }\n      </div>\n    </div>\n  )\n}\n\nexport default Post;","import React from 'react';\nimport s from './MyPosts.module.css';\nimport Post from './Post/Post';\nimport {Field, reduxForm} from \"redux-form\";\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\n\nconst maxLength10 = maxLengthCreator(10);\n\nlet AddNewPostForm = (props) => {\n    return (\n        <form onSubmit={props.handleSubmit} className={s.field}>\n            <div>\n                <Field className={s.fieldForm} name=\"newPostText\" component={Textarea} placeholder={\"Post message\"}\n                       validate={[required, maxLength10]}/>\n            </div>\n            <div>\n                <button>Add post</button>\n            </div>\n        </form>\n    )\n};\n\nlet AddNewPostFormRedux = reduxForm({form: \"ProfileAddNewPostForm\"})(AddNewPostForm);\n\nconst MyPosts = React.memo(props => {\n    let postsElements =\n        [...props.posts]\n            .reverse()\n            .map(p => <Post key={p.id} message={p.message} likesCount={p.likesCount}/>);\n\n    let newPostElement = React.createRef();\n\n    let onAddPost = (values) => {\n        props.addPost(values.newPostText);\n    };\n\n    return (\n        <div className={s.postsBlock}>\n            <h2>My posts</h2>\n            <AddNewPostFormRedux onSubmit={onAddPost}/>\n            <div className={s.posts}>\n                {postsElements}\n            </div>\n        </div>\n    )\n});\n\nexport default MyPosts;","import React from 'react';\nimport {addPostActionCreator} from \"../../../redux/profile-reducer\";\nimport MyPosts from \"./MyPosts\";\nimport {connect} from \"react-redux\";\n\nconst mapStateToProps = (state) => {\n    return {\n        posts: state.profilePage.posts,\n        newPostText: state.profilePage.newPostText\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        addPost: (newPostText) => {\n            dispatch(addPostActionCreator(newPostText));\n        }\n    }\n}\n\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\n\nexport default MyPostsContainer;","import React from 'react';\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\n\nconst Profile = (props) => {\n    return (\n        <div>\n            <ProfileInfo savePhoto={props.savePhoto}\n                         isOwner={props.isOwner}\n                         profile={props.profile}\n                         status={props.status}\n                         saveProfile={props.saveProfile}\n                         updateStatus={props.updateStatus}/>\n            <MyPostsContainer />\n        </div>\n    )\n}\n\nexport default Profile;","import React from 'react';\nimport Profile from \"./Profile\";\nimport {connect} from \"react-redux\";\nimport {getStatus, getUserProfile, savePhoto, saveProfile, updateStatus} from \"../../redux/profile-reducer\";\nimport {withRouter} from \"react-router-dom\";\nimport {compose} from \"redux\";\n\nclass ProfileContainer extends React.Component {\n\n    refreshProfile() {\n        let userId = this.props.match.params.userId;\n        if (!userId) {\n            userId = this.props.authorizedUserId;\n            if (!userId) {\n                this.props.history.push(\"/login\");\n            }\n        }\n        this.props.getUserProfile(userId);\n        this.props.getStatus(userId);\n    }\n\n    componentDidMount() {\n        this.refreshProfile();\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (this.props.match.params.userId != prevProps.match.params.userId) {\n            this.refreshProfile();\n        }\n    }\n\n    render() {\n        return (\n            <Profile {...this.props}\n                     isOwner={!this.props.match.params.userId}\n                     profile={this.props.profile}\n                     status={this.props.status}\n                     updateStatus={this.props.updateStatus}\n                     savePhoto={this.props.savePhoto}/>\n        )\n    }\n}\n\nlet mapStateToProps = (state) => {\n    return ({\n        profile: state.profilePage.profile,\n        status: state.profilePage.status,\n        authorizedUserId: state.auth.userId,\n        isAuth: state.auth.isAuth\n    })\n}\n\nexport default compose(\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus, savePhoto, saveProfile}),\n    withRouter\n)(ProfileContainer);\n\n\n\n\n"],"sourceRoot":""}